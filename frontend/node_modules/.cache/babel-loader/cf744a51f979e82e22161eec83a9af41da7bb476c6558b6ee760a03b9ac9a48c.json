{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../constants';\nconst useTransactions = () => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState(3);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [statistics, setStatistics] = useState({\n    totalSaleAmount: 0,\n    totalSoldItems: 0,\n    totalNotSoldItems: 0\n  });\n  const [barChartData, setBarChartData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [pieChartData, setPieChartData] = useState([]);\n  const fetchData = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_BASE_URL}/combined-data`, {\n        params: {\n          month: selectedMonth,\n          search: searchQuery,\n          page,\n          perPage: 10\n        }\n      });\n      if (data) {\n        setTransactions(data.transactions.transactions || []);\n        setTotalPages(Math.ceil(data.transactions.total / 10));\n        setStatistics(data.statistics || {\n          totalSaleAmount: 0,\n          totalSoldItems: 0,\n          totalNotSoldItems: 0\n        });\n        setBarChartData(data.barChart || []);\n        setPieChartData(data.pieChart || []);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('Error loading data. Please try again.');\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [selectedMonth, searchQuery, page]);\n  return {\n    selectedMonth,\n    setSelectedMonth,\n    searchQuery,\n    setSearchQuery,\n    transactions,\n    statistics,\n    barChartData,\n    page,\n    setPage,\n    totalPages,\n    pieChartData\n  };\n};\n_s(useTransactions, \"V+Ubl+tcl+Fn7Akzfkpprkzoy9Q=\");\nexport default useTransactions;","map":{"version":3,"names":["useState","useEffect","axios","API_BASE_URL","useTransactions","_s","selectedMonth","setSelectedMonth","searchQuery","setSearchQuery","transactions","setTransactions","statistics","setStatistics","totalSaleAmount","totalSoldItems","totalNotSoldItems","barChartData","setBarChartData","page","setPage","totalPages","setTotalPages","pieChartData","setPieChartData","fetchData","data","get","params","month","search","perPage","Math","ceil","total","barChart","pieChart","error","console","alert"],"sources":["/Users/vipinshivhare/Desktop/Demo/Assignment/Roxiler/frontend/src/hooks/useTransactions.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../constants';\n\nconst useTransactions = () => {\n  const [selectedMonth, setSelectedMonth] = useState(3);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [statistics, setStatistics] = useState({\n    totalSaleAmount: 0,\n    totalSoldItems: 0,\n    totalNotSoldItems: 0,\n  });\n  const [barChartData, setBarChartData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [pieChartData, setPieChartData] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const { data } = await axios.get(`${API_BASE_URL}/combined-data`, {\n        params: {\n          month: selectedMonth,\n          search: searchQuery,\n          page,\n          perPage: 10\n        }\n      });\n\n      if (data) {\n        setTransactions(data.transactions.transactions || []);\n        setTotalPages(Math.ceil(data.transactions.total / 10));\n        setStatistics(data.statistics || {\n          totalSaleAmount: 0,\n          totalSoldItems: 0,\n          totalNotSoldItems: 0\n        });\n        setBarChartData(data.barChart || []);\n        setPieChartData(data.pieChart || []);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('Error loading data. Please try again.');\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [selectedMonth, searchQuery, page]);\n\n  return {\n    selectedMonth,\n    setSelectedMonth,\n    searchQuery,\n    setSearchQuery,\n    transactions,\n    statistics,\n    barChartData,\n    page,\n    setPage,\n    totalPages,\n    pieChartData\n  };\n};\n\nexport default useTransactions;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,cAAc;AAE3C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC;IAC3Cc,eAAe,EAAE,CAAC;IAClBC,cAAc,EAAE,CAAC;IACjBC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,GAAGxB,YAAY,gBAAgB,EAAE;QAChEyB,MAAM,EAAE;UACNC,KAAK,EAAEvB,aAAa;UACpBwB,MAAM,EAAEtB,WAAW;UACnBW,IAAI;UACJY,OAAO,EAAE;QACX;MACF,CAAC,CAAC;MAEF,IAAIL,IAAI,EAAE;QACRf,eAAe,CAACe,IAAI,CAAChB,YAAY,CAACA,YAAY,IAAI,EAAE,CAAC;QACrDY,aAAa,CAACU,IAAI,CAACC,IAAI,CAACP,IAAI,CAAChB,YAAY,CAACwB,KAAK,GAAG,EAAE,CAAC,CAAC;QACtDrB,aAAa,CAACa,IAAI,CAACd,UAAU,IAAI;UAC/BE,eAAe,EAAE,CAAC;UAClBC,cAAc,EAAE,CAAC;UACjBC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACFE,eAAe,CAACQ,IAAI,CAACS,QAAQ,IAAI,EAAE,CAAC;QACpCX,eAAe,CAACE,IAAI,CAACU,QAAQ,IAAI,EAAE,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CE,KAAK,CAAC,uCAAuC,CAAC;IAChD;EACF,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACdwB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACnB,aAAa,EAAEE,WAAW,EAAEW,IAAI,CAAC,CAAC;EAEtC,OAAO;IACLb,aAAa;IACbC,gBAAgB;IAChBC,WAAW;IACXC,cAAc;IACdC,YAAY;IACZE,UAAU;IACVK,YAAY;IACZE,IAAI;IACJC,OAAO;IACPC,UAAU;IACVE;EACF,CAAC;AACH,CAAC;AAAClB,EAAA,CA3DID,eAAe;AA6DrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}