{"ast":null,"code":"var _jsxFileName = \"/Users/vipinshivhare/Desktop/Demo/Assignment/Roxiler/frontend/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TransactionsTable from './TransactionsTable';\nimport Statistics from './Statistics';\nimport BarChart from './BarChart';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState('3'); // Default March\n  const [searchText, setSearchText] = useState('');\n  const [data, setData] = useState({\n    transactions: [],\n    statistics: {},\n    barChartData: []\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    fetchData();\n  }, [selectedMonth, searchText, currentPage]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5030/api/combined-data`, {\n        params: {\n          month: selectedMonth,\n          search: searchText,\n          page: currentPage,\n          perPage: 10\n        }\n      });\n      setData(response.data);\n      setTotalPages(Math.ceil(response.data.transactions.total / 10));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search transaction...\",\n        value: searchText,\n        onChange: e => setSearchText(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedMonth,\n        onChange: e => setSelectedMonth(e.target.value),\n        className: \"month-select\",\n        children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index + 1,\n          children: month\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      data: data.statistics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n      transactions: data.transactions,\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      data: data.barChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"MxYretJkda09YVmtvXNCOXy7kBk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","TransactionsTable","Statistics","BarChart","jsxDEV","_jsxDEV","Dashboard","_s","selectedMonth","setSelectedMonth","searchText","setSearchText","data","setData","transactions","statistics","barChartData","currentPage","setCurrentPage","totalPages","setTotalPages","fetchData","response","get","params","month","search","page","perPage","Math","ceil","total","error","console","months","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","index","onPageChange","barChart","_c","$RefreshReg$"],"sources":["/Users/vipinshivhare/Desktop/Demo/Assignment/Roxiler/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TransactionsTable from './TransactionsTable';\nimport Statistics from './Statistics';\nimport BarChart from './BarChart';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [selectedMonth, setSelectedMonth] = useState('3'); // Default March\n  const [searchText, setSearchText] = useState('');\n  const [data, setData] = useState({\n    transactions: [],\n    statistics: {},\n    barChartData: []\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    fetchData();\n  }, [selectedMonth, searchText, currentPage]);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5030/api/combined-data`, {\n        params: {\n          month: selectedMonth,\n          search: searchText,\n          page: currentPage,\n          perPage: 10\n        }\n      });\n      setData(response.data);\n      setTotalPages(Math.ceil(response.data.transactions.total / 10));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Transaction Dashboard</h1>\n      \n      <div className=\"controls\">\n        <input\n          type=\"text\"\n          placeholder=\"Search transaction...\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          className=\"search-input\"\n        />\n        \n        <select\n          value={selectedMonth}\n          onChange={(e) => setSelectedMonth(e.target.value)}\n          className=\"month-select\"\n        >\n          {months.map((month, index) => (\n            <option key={index + 1} value={index + 1}>\n              {month}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <Statistics data={data.statistics} />\n      \n      <TransactionsTable\n        transactions={data.transactions}\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={setCurrentPage}\n      />\n      \n      <BarChart data={data.barChart} />\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}